worker_processes  1;

env             PWD;

error_log       /tmp/isucon/logs/error.log;
pid             /tmp/isucon/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include         nginx/conf/mime.types;
    default_type    application/octet-stream;
    lua_package_path 'nginx/lualib/?.lua;lib/?.lua;;';
    #lua_package_cpath 'nginx/lualib/resty/?.so;;';
    #lua_package_cpath 'nginx/lualib/resty/?.so;lib/?.so;;';

    sendfile        on;
    keepalive_timeout 30;

    access_log  /tmp/isucon/logs/app.access.log;

    server {
        listen      8080;
        server_name localhost;
        set $template_root 'views';
        default_type    text/html;

        location = / {
            proxy_pass http://localhost:8080/login;
        }

        location @get_login {
            content_by_lua  '
                ngx.log(ngx.ERR, "** [DEBUG] get_login: ", ngx.status)
                local args = ngx.req.get_uri_args()
                local template = require "resty.template"
                local layout = template.new("login.html", "base.html")

                layout.title = "isucon4"
                if ngx.status == 403 then
                    ngx.log(ngx.ERR, "** [403] get_login ")
                    args.notice = "forvidden"
                end
                if args.notice then
                    ngx.log(ngx.ERR, "** notice: ", args.notice)
                    layout.notice = args.notice
                end
                layout:render()
            ';
        }

        location @post_login {
            content_by_lua  '
                ngx.req.read_body()
                local args,err = ngx.req.get_post_args()
                local json = require "resty.libcjson"
                local redis = require "resty.redis"
                local session = require("resty.session").start()

                function attempt_login(login, password)
                    if login == "isucon" and password == "isunageruna" then
                        ngx.log(ngx.ERR, "** attempt_login: "..login)
                        return {id = "1", name = "isucon"}
                    else 
                        return _, "Wrong username or password"
                    end
                end

                user, err = attempt_login(args.login, args.password)

                if user then
                    session.data.user_id = user.id
                    session.data.user_name = user.name
                    session:save()
                    ngx.redirect("/mypage")
                else
                    session.data.notice = err
                    session:save()
                    ngx.redirect("/login")
                end
            ';
        }

        location /login {
            if ($request_method = POST) {
                content_by_lua '
                    return ngx.exec("@post_login")
                ';
            }
            content_by_lua '
                local session = require("resty.session").start()
                local template = require "resty.template"
                local layout = template.new("login.html", "base.html")

                layout.title = "isucon4"
                if session.data.notice then
                    ngx.log(ngx.ERR, "** notice: ", session.data.notice)
                    layout.notice = session.data.notice
                end
                layout:render()
            ';
        }

        location /mypage {
            content_by_lua '
                local session = require("resty.session").start()
                local template = require "resty.template"
                if session.data.user_name then
                    local view = template.new("mypage.html", "base.html")
                    view.title = "isucon4"
                    view.last_logined_at = "2014-11-04 18:30:00"
                    view.last_logined_ip = "192.168.33.29"
                    view.name = session.data.user_name
                    view:render()
                else 
                    session.data.notice = "You must be logged in"
                    session:save()
                    ngx.redirect("/login")
                end
            ';
        }
        location /report {
            default_type    text/json;
            content_by_lua '
                ngx.say("{bannedip:[], locked_user:[]}");
            ';
        }

        location /stylesheets {
            alias ../public/stylesheets;
        }
        location /images {
            alias ../public/images;
        }

    }
}
